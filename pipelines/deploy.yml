parameters:
  depends: jDeployDockerDEV
  deploymentName: jDeploy
  environmentName: 'DEVELOPMENT'
  displayTitle: 'Push Docker Image'
  poolName: 'Azure Pipelines'
  azureSubscriptionName: 'cloud'
  containerRegistry: 'pdasolucoes'
  containerRegistryName: 'pdasolucoes.azurecr.io'
  dockerImageName: 'base-os-api-dev'
  dockerImageTag: latest
  webAppName: 'base-os-api'
  webAppSlot: 'dev'

jobs:
  - deployment: ${{ parameters.deploymentName }}
    environment: ${{ parameters.environmentName }}
    displayName: ${{ parameters.displayTitle }}
    dependsOn: ${{ parameters.depends }}
    continueOnError: false
    pool:
      name: ${{ parameters.poolName }}
    variables:
      group: ${{ parameters.environmentName }}
    workspace:
      clean: all
    strategy:
      runOnce:
        deploy:
          steps:
            - task: AzureWebAppContainer@1
              displayName: Deploy Docker Image to WebApp
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionName }}
                appName: ${{ parameters.webAppName }}
                containers: ${{ parameters.containerRegistryName }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageTag }}
                imageName: ${{ parameters.containerRegistryName }}/${{ parameters.dockerImageName }}:${{ parameters.dockerImageTag }}
                deployToSlotOrASE: true
                slotName: ${{ parameters.webAppSlot }}

            - task: AzureAppServiceManage@0
              inputs:
                azureSubscription: ${{ parameters.azureSubscriptionName }}
                webAppName: ${{ parameters.webAppName }}
                action: 'Restart Azure App Service'
                slot: ${{ parameters.webAppSlot }}
